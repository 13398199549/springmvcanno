<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 开启容器的自动扫描功能，但是需要使用exclude-filter排除业务层组件，以及持久层组件 -->
	<!-- 容器过滤器类型有：annotation(注解)， assignable(类型)，aspectj(切面)，regex(正则) -->

	<context:component-scan base-package="org.framestudy.springmvcanno">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<!-- 开启springmvc框架的注解支持 -->
	<mvc:annotation-driven conversion-service="conversionService"
		validator="localValidatorFactoryBea"></mvc:annotation-driven>
	
	<!--  将国际化配置信息存入Session中 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>

	<!-- 配置拦截器链 -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
		
		<!-- 所有的请求都需要经过该拦截器 <bean class="org.framestudy.springmvcanno.interceptor.LoginInterceptor"></bean> -->

		<!-- 一部分请求，需要经过某拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/sysmag/login" />
			<bean class="org.framestudy.springmvcanno.interceptor.LoginInterceptor" />
		</mvc:interceptor>

		<!-- 一部分请求，需要经过某拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/*/*" />
			<bean class="org.framestudy.springmvcanno.interceptor.UserInterceptor" />
		</mvc:interceptor>

	</mvc:interceptors>

	<!-- 配置spring验证框架工厂类 -->
	<bean id="localValidatorFactoryBea"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
	</bean>


	<!-- 定义spring容器的国际化支持 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="message"></property>
	</bean>

	<!-- 定义spring框架提供的转换工厂，并向转换工厂中，注册转换服务 -->
	<bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean
					class="org.framestudy.springmvcanno.converter.UtilDateContextConverter" />
			</set>
		</property>
	</bean>

	<!-- 配置文件上传解析器，实际上就是你们WEB阶段工具类的封装 -->
	<!-- ID固定为multipartResolver不能改 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 单次文件上传的最大容量,单位是：byte -->
		<property name="maxUploadSize" value="100000000" />
		<!-- 单次文件上传，每一个独立的文件最大的容量,单位是：byte -->
		<property name="maxUploadSizePerFile" value="10000000" />
		<!-- 从临时文件中向真实文件写数据的时候，每次读取的最大容量，这里设置的是10K -->
		<property name="maxInMemorySize" value="10240"></property>
		<!-- 默认编码集为：UTF-8 -->
		<property name="defaultEncoding" value="utf-8"></property>
	</bean>

	<!-- 配置视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
</beans>